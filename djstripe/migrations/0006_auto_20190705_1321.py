# Generated by Django 2.2.2 on 2019-07-05 13:21

from django.db import migrations, models
import django.db.models.deletion
import djstripe.enums
import djstripe.fields


class Migration(migrations.Migration):

    dependencies = [
        ('djstripe', '0005_auto_20190703_0958'),
    ]

    operations = [
        migrations.AddField(
            model_name='paymentintent',
            name='review',
            field=models.CharField(blank=True, help_text='ID of the review associated with this PaymentIntent, if any.', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='paymentintent',
            name='setup_future_usage',
            field=models.CharField(blank=True, help_text='Indicates that you intend to make future payments with thisPaymentIntent’s payment method.If present, the payment method used with this PaymentIntent canbe attached to a Customer, even after the transaction completes.Use `on_session` if you intend to only reuse the payment methodwhen your customer is present in your checkout flow. Use `off_session`if your customer may or may not be in your checkout flow.Stripe uses `setup_future_usage` to dynamically optimize your payment flow andcomply with regional legislation and network rules. For example,if your customer is impacted by SCA, using `off_session` willensure that they are authenticated while processing this PaymentIntent.You will then be able to make later off-session payments for this customer.', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='paymentintent',
            name='shipping',
            field=djstripe.fields.JSONField(blank=True, help_text='Shipping information for this PaymentIntent.', null=True),
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='type',
            field=models.CharField(blank=True, help_text='The type of the PaymentMethod. An additional hash is included on the PaymentMethodwith a name matching this value. It contains additional information specific to thePaymentMethod type.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='paymentintent',
            name='client_secret',
            field=models.CharField(help_text='The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key.', max_length=255),
        ),
        migrations.AlterField(
            model_name='paymentintent',
            name='on_behalf_of',
            field=models.ForeignKey(help_text='The account (if any) for which the funds of the PaymentIntent are intended.', null=True, on_delete=django.db.models.deletion.CASCADE, to='djstripe.Account'),
        ),
        migrations.AlterField(
            model_name='paymentintent',
            name='statement_descriptor',
            field=models.CharField(blank=True, help_text='Extra information about a PaymentIntent. This will appear on your customer’s statement when this PaymentIntent succeeds in creating a charge.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='paymentintent',
            name='status',
            field=djstripe.fields.StripeEnumField(enum=djstripe.enums.PaymentIntentStatus, help_text='Status of this PaymentIntent, one of requires_payment_method, requires_confirmation, requires_action, processing, requires_capture, canceled, or succeeded. You can read more about PaymentIntent statuses here.', max_length=16),
        ),
        migrations.AlterField(
            model_name='paymentintent',
            name='transfer_data',
            field=djstripe.fields.JSONField(blank=True, help_text='The data with which to automatically create a Transfer when the payment is finalized. See the PaymentIntents Connect usage guide for details.', null=True),
        ),
        migrations.CreateModel(
            name='SetupIntent',
            fields=[
                ('djstripe_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('id', djstripe.fields.StripeIdField(max_length=255, unique=True)),
                ('livemode', models.NullBooleanField(default=None, help_text='Null here indicates that the livemode status is unknown or was previously unrecorded. Otherwise, this field indicates whether this record comes from Stripe test mode or live mode operation.')),
                ('created', djstripe.fields.StripeDateTimeField(blank=True, help_text='The datetime this object was created in stripe.', null=True)),
                ('metadata', djstripe.fields.JSONField(blank=True, help_text='A set of key/value pairs that you can attach to an object. It can be useful for storing additional information about an object in a structured format.', null=True)),
                ('description', models.TextField(blank=True, help_text='A description of this object.', null=True)),
                ('djstripe_created', models.DateTimeField(auto_now_add=True)),
                ('djstripe_updated', models.DateTimeField(auto_now=True)),
                ('application', models.CharField(blank=True, help_text='ID of the Connect application that created the SetupIntent.', max_length=255, null=True)),
                ('cancellation_reason', models.CharField(help_text='Reason for cancellation of this SetupIntent, one of abandoned, requested_by_customer, or duplicate', max_length=255, null=True)),
                ('client_secret', models.CharField(blank=True, help_text='The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.', max_length=255, null=True)),
                ('last_setup_error', djstripe.fields.JSONField(blank=True, help_text='The error encountered in the previous SetupIntent confirmation.', null=True)),
                ('next_action', djstripe.fields.JSONField(blank=True, help_text='If present, this property tells you what actions you need to take inorder for your customer to continue payment setup.', null=True)),
                ('payment_method_types', djstripe.fields.JSONField(help_text='The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.')),
                ('status', djstripe.fields.StripeEnumField(enum=djstripe.enums.SetupIntentStatus, help_text='Status of this SetupIntent, one of requires_payment_method, requires_confirmation,requires_action, processing, canceled, or succeeded.', max_length=9)),
                ('usage', djstripe.fields.StripeEnumField(default='off_session', enum=djstripe.enums.IntentUsage, help_text='Indicates how the payment method is intended to be used in the future.', max_length=11)),
                ('customer', models.ForeignKey(help_text='ID of the Customer this SetupIntent belongs to, if one exists.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='djstripe.Customer')),
                ('on_behalf_of', models.ForeignKey(help_text='The account (if any) for which the setup is intended.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='djstripe.Account')),
                ('payment_method', models.ForeignKey(help_text='ID of the payment method used in this PaymentIntent.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='djstripe.PaymentMethod')),
            ],
            options={
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
    ]
